// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/google/uuid"
	"github.com/rherlt/reval/ent/configuration"
	"github.com/rherlt/reval/ent/evaluation"
	"github.com/rherlt/reval/ent/evaluationprompt"
	"github.com/rherlt/reval/ent/request"
	"github.com/rherlt/reval/ent/response"
	"github.com/rherlt/reval/ent/scenario"
	"github.com/rherlt/reval/ent/schema"
	"github.com/rherlt/reval/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	configurationFields := schema.Configuration{}.Fields()
	_ = configurationFields
	// configurationDescKey is the schema descriptor for key field.
	configurationDescKey := configurationFields[1].Descriptor()
	// configuration.KeyValidator is a validator for the "key" field. It is called by the builders before save.
	configuration.KeyValidator = configurationDescKey.Validators[0].(func(string) error)
	// configurationDescValue is the schema descriptor for value field.
	configurationDescValue := configurationFields[2].Descriptor()
	// configuration.ValueValidator is a validator for the "value" field. It is called by the builders before save.
	configuration.ValueValidator = configurationDescValue.Validators[0].(func(string) error)
	// configurationDescID is the schema descriptor for id field.
	configurationDescID := configurationFields[0].Descriptor()
	// configuration.DefaultID holds the default value on creation for the id field.
	configuration.DefaultID = configurationDescID.Default.(func() uuid.UUID)
	evaluationFields := schema.Evaluation{}.Fields()
	_ = evaluationFields
	// evaluationDescID is the schema descriptor for id field.
	evaluationDescID := evaluationFields[0].Descriptor()
	// evaluation.DefaultID holds the default value on creation for the id field.
	evaluation.DefaultID = evaluationDescID.Default.(func() uuid.UUID)
	evaluationpromptFields := schema.EvaluationPrompt{}.Fields()
	_ = evaluationpromptFields
	// evaluationpromptDescID is the schema descriptor for id field.
	evaluationpromptDescID := evaluationpromptFields[0].Descriptor()
	// evaluationprompt.DefaultID holds the default value on creation for the id field.
	evaluationprompt.DefaultID = evaluationpromptDescID.Default.(func() uuid.UUID)
	requestFields := schema.Request{}.Fields()
	_ = requestFields
	// requestDescID is the schema descriptor for id field.
	requestDescID := requestFields[0].Descriptor()
	// request.DefaultID holds the default value on creation for the id field.
	request.DefaultID = requestDescID.Default.(func() uuid.UUID)
	responseFields := schema.Response{}.Fields()
	_ = responseFields
	// responseDescID is the schema descriptor for id field.
	responseDescID := responseFields[0].Descriptor()
	// response.DefaultID holds the default value on creation for the id field.
	response.DefaultID = responseDescID.Default.(func() uuid.UUID)
	scenarioFields := schema.Scenario{}.Fields()
	_ = scenarioFields
	// scenarioDescID is the schema descriptor for id field.
	scenarioDescID := scenarioFields[0].Descriptor()
	// scenario.DefaultID holds the default value on creation for the id field.
	scenario.DefaultID = scenarioDescID.Default.(func() uuid.UUID)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[1].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescExternalId is the schema descriptor for externalId field.
	userDescExternalId := userFields[2].Descriptor()
	// user.ExternalIdValidator is a validator for the "externalId" field. It is called by the builders before save.
	user.ExternalIdValidator = userDescExternalId.Validators[0].(func(string) error)
	// userDescID is the schema descriptor for id field.
	userDescID := userFields[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
