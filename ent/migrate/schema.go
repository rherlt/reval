// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// EvaluationsColumns holds the columns for the "evaluations" table.
	EvaluationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "external_id", Type: field.TypeString, Nullable: true},
		{Name: "date", Type: field.TypeTime},
		{Name: "evaluation_result", Type: field.TypeString},
		{Name: "response_id", Type: field.TypeUUID},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// EvaluationsTable holds the schema information for the "evaluations" table.
	EvaluationsTable = &schema.Table{
		Name:       "evaluations",
		Columns:    EvaluationsColumns,
		PrimaryKey: []*schema.Column{EvaluationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "evaluations_responses_evaluations",
				Columns:    []*schema.Column{EvaluationsColumns[4]},
				RefColumns: []*schema.Column{ResponsesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "evaluations_users_evaluations",
				Columns:    []*schema.Column{EvaluationsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RequestsColumns holds the columns for the "requests" table.
	RequestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "external_id", Type: field.TypeString, Nullable: true},
		{Name: "from", Type: field.TypeString, Nullable: true},
		{Name: "subject", Type: field.TypeString, Nullable: true},
		{Name: "body", Type: field.TypeString},
		{Name: "date", Type: field.TypeTime, Nullable: true},
	}
	// RequestsTable holds the schema information for the "requests" table.
	RequestsTable = &schema.Table{
		Name:       "requests",
		Columns:    RequestsColumns,
		PrimaryKey: []*schema.Column{RequestsColumns[0]},
	}
	// ResponsesColumns holds the columns for the "responses" table.
	ResponsesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "external_id", Type: field.TypeString, Nullable: true},
		{Name: "from", Type: field.TypeString, Nullable: true},
		{Name: "subject", Type: field.TypeString, Nullable: true},
		{Name: "body", Type: field.TypeString},
		{Name: "date", Type: field.TypeTime, Nullable: true},
		{Name: "request_id", Type: field.TypeUUID},
	}
	// ResponsesTable holds the schema information for the "responses" table.
	ResponsesTable = &schema.Table{
		Name:       "responses",
		Columns:    ResponsesColumns,
		PrimaryKey: []*schema.Column{ResponsesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "responses_requests_responses",
				Columns:    []*schema.Column{ResponsesColumns[6]},
				RefColumns: []*schema.Column{RequestsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "username", Type: field.TypeString},
		{Name: "external_id", Type: field.TypeString, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		EvaluationsTable,
		RequestsTable,
		ResponsesTable,
		UsersTable,
	}
)

func init() {
	EvaluationsTable.ForeignKeys[0].RefTable = ResponsesTable
	EvaluationsTable.ForeignKeys[1].RefTable = UsersTable
	ResponsesTable.ForeignKeys[0].RefTable = RequestsTable
}
